{"version":3,"sources":["components/AddAppointments.js","components/SearchAppointments.js","components/ListAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["AddAppointments","state","petName","ownerName","aptDate","aptTime","aptNotes","handleChange","bind","handleAdd","e","preventDefault","tempApt","this","props","addAppointment","setState","toggleForm","target","value","name","className","formDisplay","onClick","id","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","rows","cols","Component","SearchAppointments","aria-label","searchApts","data-toggle","aria-haspopup","aria-expanded","orderBy","changeOrder","orderDir","href","role","ListAppointments","appointments","map","item","key","aptId","deleteAppointment","contentEditable","suppressContentEditableWarning","onBlur","updateInfo","innerText","App","myAppointments","queryText","lastIndex","query","order","dir","tempApts","findIndex","apt","unshift","temporaryApts","without","fetch","then","response","json","result","apts","filteredApts","sort","a","b","toLowerCase","filter","eachItem","includes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c428b5d4.chunk.js","sourcesContent":["import React, {Component} from 'react'; //imports component from node-module folder\nimport {FaPlus} from 'react-icons/fa';\n\nclass AddAppointments extends Component {\n\n  constructor(){\n    super();\n    this.state={\n      petName:'',\n      ownerName:'',\n      aptDate:'',\n      aptTime:'',\n      aptNotes:''\n    }\n    this.handleChange=this.handleChange.bind(this);\n    this.handleAdd=this.handleAdd.bind(this);\n  }\n\n  handleAdd(e) {\n    e.preventDefault();\n    let tempApt={\n      petName: this.state.petName,\n      ownerName:this.state.ownerName,\n      aptDate:this.state.aptDate+' '+ this.state.aptTime,\n      aptNotes:this.state.aptNotes\n    }\n\n    this.props.addAppointment(tempApt);\n\n    this.setState({\n      petName:'',\n      ownerName:'',\n      aptDate:'',\n      aptTime:'',\n      aptNotes:''\n    });\n    this.props.toggleForm();\n  }\n\n  handleChange(e) {\n    const target =e.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n    render(){\n        return (\n            <div className= {'card textcenter mt-3' +\n             (this.props.formDisplay ? '' : ' add-appointment') \n            }>\n            <div \n             className=\"apt-addheading card-header bg-primary text-white\"\n             onClick = {this.props.toggleForm}\n            >\n              <FaPlus /> Add Appointment\n            </div>\n  \n            <div className=\"card-body\">\n              <form id=\"aptForm\" noValidate \n              onSubmit={this.handleAdd}>\n                <div className=\"form-group form-row\">\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"petName\"\n                    readOnly\n                  >\n                    Pet Name\n                  </label>\n                  <div className=\"col-md-10\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"petName\"\n                      placeholder=\"Pet's Name\"\n                      value={this.state.petName}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n  \n                <div className=\"form-group form-row\">\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"ownerName\"\n                  >\n                    Pet Owner\n                  </label>\n                  <div className=\"col-md-10\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"ownerName\"\n                      placeholder=\"Owner's Name\"\n                      value={this.state.ownerName}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n  \n                <div className=\"form-group form-row\">\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"aptDate\"\n                  >\n                    Date\n                  </label>\n                  <div className=\"col-md-4\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control\"\n                      name=\"aptDate\"\n                      id=\"aptDate\"\n                      value={this.state.aptDate}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"aptTime\"\n                  >\n                    Time\n                  </label>\n                  <div className=\"col-md-4\">\n                    <input\n                      type=\"time\"\n                      className=\"form-control\"\n                      name=\"aptTime\"\n                      id=\"aptTime\"\n                      value={this.state.aptTime}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n  \n                <div className=\"form-group form-row\">\n                  <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\n                    Apt. Notes\n                  </label>\n                  <div className=\"col-md-10\">\n                    <textarea\n                      className=\"form-control\"\n                      rows=\"4\"\n                      cols=\"50\"\n                      name=\"aptNotes\"\n                      id=\"aptNotes\"\n                      placeholder=\"Appointment Notes\"\n                      value={this.state.aptNotes}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n  \n                <div className=\"form-group form-row mb-0\">\n                  <div className=\"offset-md-2 col-md-10\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary d-block ml-auto\"\n                    >\n                      Add Appointment\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default AddAppointments;\n//test 54\n","import React, {Component} from 'react';\n\nclass SearchAppointments extends Component{\n    render(){\n        return (\n        <div className=\"search-appointments row justify-content-center my-4\">\n        <div className=\"col-md-6\">\n          <div className=\"input-group\">\n            <input\n              id=\"SearchApts\"\n              type=\"text\"\n              className=\"form-control\"\n              aria-label=\"Search Appointments\"\n              onChange = {e => this.props.searchApts(e.target.value)}\n            />\n            <div className=\"input-group-append\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary dropdown-toggle\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                Sort by: <span className=\"caret\" />\n              </button>\n\n              <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\n                <button className={\n                    'sort-by dropdown-item ' + \n                    (this.props.orderBy === 'petName' ? 'active' : '')\n                } \n                onClick={e => this.props.changeOrder('petName' , this.props.orderDir)}\n                href=\"#\">\n                  Pet Name\n                </button>\n                <button className={\n                    'sort-by dropdown-item ' + \n                    (this.props.orderBy === 'aptDate' ? 'active' : '')\n                } \n                onClick={e => this.props.changeOrder('aptDate' , this.props.orderDir)}\n                href=\"#\">\n                  Date\n                </button>\n                <button className={\n                    'sort-by dropdown-item ' + \n                    (this.props.orderBy === 'ownerName' ? 'active' : '')\n                } \n                onClick={e => this.props.changeOrder('ownerName' , this.props.orderDir)}\n                href=\"#\">\n                  Owner\n                </button>\n                <div role=\"separator\" className=\"dropdown-divider\" />\n                <button className={\n                    'sort-by dropdown-item ' + \n                    (this.props.orderDir === 'asc' ? 'active' : '')\n                } \n                onClick={e => this.props.changeOrder(this.props.orderBy, 'asc')}\n                href=\"#\">\n                  Asc\n                </button>\n                <button className={\n                    'sort-by dropdown-item ' + \n                    (this.props.orderDir === 'desc' ? 'active' : '')\n                } \n                onClick={e => this.props.changeOrder(this.props.orderBy, 'desc')}\n                href=\"#\">\n                  Desc\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      );\n    }\n}\n\nexport default SearchAppointments;","import React , {Component} from 'react';\nimport {FaTimes} from 'react-icons/fa';\nimport {Moment} from 'react-moment';\n\nclass ListAppointments extends Component{\n    render(){\n        return (\n            <div className=\"appointment-list item-list mb-3\">\n                {this.props.appointments.map(item => (\n                    <div className=\"pet-item col media py-3\" key={item.aptId}>\n                        <div className=\"mr-3\">\n                        <button className=\"pet-delete btn btn-sm btn-danger\"\n                        onClick={()=>this.props.deleteAppointment(item)}\n                        >\n                            <FaTimes />\n                        </button>\n                        </div>\n\n                        <div className=\"pet-info media-body\">\n                        <div className=\"pet-head d-flex\">\n                            <span className=\"pet-name\" \n                            contentEditable\n                            suppressContentEditableWarning\n                            onBlur={\n                                e=> this.props.updateInfo('petName', e.target.innerText, item.aptId)\n                            }\n                            >{item.aptId}--{item.petName}</span>\n                            <span className=\"apt-date ml-auto\">\n                                {item.aptDate}\n                            </span>\n                        </div>\n\n                        <div className=\"owner-name\">\n                            <span className=\"label-item\">Owner: </span>\n                            <span \n                            contentEditable\n                            suppressContentEditableWarning\n                            onBlur={\n                                e=> this.props.updateInfo('ownerName', e.target.innerText, item.aptId)\n                            }\n                            >{item.ownerName}</span>\n                        </div>\n                        <div className=\"apt-notes\"\n                        contentEditable\n                        suppressContentEditableWarning\n                        onBlur={\n                            e=> this.props.updateInfo('aptNotes', e.target.innerText, item.aptId)\n                        }\n                        \n                        >{item.aptNotes}</div>\n                        </div>\n                    </div>\n                ) )}\n            </div>\n        );\n    }\n}\n\nexport default ListAppointments;","import React, { Component } from 'react';\nimport '../css/App.css';\nimport AddAppointments from './AddAppointments';//import AddAppointments class from the AddAppointments.js file\nimport SearchAppointments from './SearchAppointments';\nimport ListAppointments from './ListAppointments';\nimport { findIndex, result } from 'lodash';\nimport { without} from 'lodash';\n\nclass App extends Component {\n  \n  constructor(){\n    super(); //super lets you use this statement\n    this.state={\n      myAppointments: [],\n      formDisplay:false,\n      orderDir:'asc',\n      orderBy:'petName',\n\n      queryText:'Ba',\n      lastIndex:0\n    }\n    this.deleteAppointment=this.deleteAppointment.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.addAppointment=this.addAppointment.bind(this);\n    this.changeOrder=this.changeOrder.bind(this);\n    this.searchApts=this.searchApts.bind(this);\n    this.updateInfo=this.updateInfo.bind(this);\n  }\n\n  toggleForm(){\n    this.setState({\n      formDisplay: !this.state.formDisplay\n    });\n  }\n\n  searchApts(query){\n    this.setState({queryText: query});\n  }\n\n  changeOrder(order,dir){\n    this.setState({\n      orderBy: order,\n      orderDir:dir\n    });\n  }\n\n  updateInfo(name,value,id){\n    let tempApts=this.state.myAppointments;\n    let aptIndex= findIndex(this.state.myAppointments, {\n      aptId: id\n    });\n    tempApts[aptIndex][name]=value;\n    this.setState({\n      myAppointments:tempApts\n    });\n  }\n\n  addAppointment(apt){\n    let tempApts=this.state.myAppointments;\n    apt.aptId=this.state.lastIndex;\n    tempApts.unshift(apt);\n    this.setState({\n      myAppointments:tempApts,\n      lastIndex:this.state.lastIndex+1\n    });\n  }\n\n  deleteAppointment(apt){\n    let temporaryApts = this.state.myAppointments;\n    temporaryApts = without (temporaryApts, apt);\n\n    this.setState({\n      myAppointments:temporaryApts\n    });\n\n  }\n  //using fetch in a lifecycle method\n  componentDidMount(){\n    fetch('./data.json')\n    .then (response => response.json())\n    .then (result => {\n      const apts = result.map (item => {\n        item.aptId=this.state.lastIndex;\n        this.setState({lastIndex:this.state.lastIndex+1});\n        return item;\n      })\n      this.setState({\n        myAppointments:apts\n      });\n\n    });\n\n  }\n  \n  render(){\n    let order;\n    let filteredApts=this.state.myAppointments;\n    if (this.state.orderDir==='asc'){\n      order=1;\n    } else {\n      order= -1;\n    }\n\n    filteredApts = filteredApts.sort((a,b) => {\n      if (a[this.state.orderBy].toLowerCase() < b[this.state.orderBy].toLowerCase() ) {\n        return -1 * order;\n      } else {\n        return 1 * order;\n      }\n    }).filter(eachItem => {\n      return(\n        eachItem['petName']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase()) || \n        eachItem['ownerName']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase()) || \n        eachItem['aptNotes']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase())  \n      );\n    });\n\n    return (\n      <main className=\"page bg-white\" id=\"petratings\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12 bg-white\">\n            <div className=\"container\">\n              <AddAppointments \n              formDisplay={this.state.formDisplay}\n              toggleForm={this.toggleForm} \n              addAppointment={this.addAppointment}\n              />\n              <SearchAppointments \n                orderBy={this.state.orderBy}\n                orderDir={this.state.orderDir}\n                changeOrder={this.changeOrder}\n                searchApts={this.searchApts}\n              />\n              <ListAppointments appointments={filteredApts}\n              deleteAppointment={this.deleteAppointment}\n              updateInfo={this.updateInfo}\n              />\n\n            </div>\n          </div>\n        </div>\n      </div>\n      </main>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/index.css';\nimport App from './components/App.js';\nimport 'jquery/dist/jquery.js';\nimport 'popper.js/dist/umd/popper.js';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}